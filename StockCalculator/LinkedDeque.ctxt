#BlueJ class context
comment0.target=LinkedDeque
comment1.params=
comment1.target=LinkedDeque()
comment2.params=newEntry
comment2.target=void\ addToFront(java.lang.Object)
comment2.text=\ Adds\ a\ new\ entry\ to\ the\ front/back\ of\ this\ deque.\r\n@param\ newEntry\ \ An\ object\ to\ be\ added.
comment3.params=newEntry
comment3.target=void\ addToBack(java.lang.Object)
comment4.params=
comment4.target=java.lang.Object\ removeFront()
comment4.text=\ Removes\ and\ returns\ the\ front/back\ entry\ of\ this\ deque.\r\n\ \ \ \ @return\ \ The\ object\ at\ the\ front/back\ of\ the\ deque.\r\n\ \ \ \ @throws\ \ NoSuchElementException\ if\ the\ deque\ is\ empty\ before\ the\r\noperation.
comment5.params=
comment5.target=java.lang.Object\ removeBack()
comment6.params=
comment6.target=java.lang.Object\ getFront()
comment6.text=\ Retrieves\ the\ front/back\ entry\ of\ this\ deque.\r\n\ \ \ \ @return\ \ The\ object\ at\ the\ front/back\ of\ the\ deque.\r\n@throws\ \ NoSuchElementException\ if\ the\ deque\ is\ empty.
comment7.params=
comment7.target=java.lang.Object\ getBack()
comment8.params=
comment8.target=boolean\ isEmpty()
comment8.text=\ Detects\ whether\ this\ deque\ is\ empty.\r\n@return\ \ True\ if\ the\ deque\ is\ empty,\ or\ false\ otherwise.
comment9.params=
comment9.target=void\ clear()
comment9.text=Removes\ all\ entries\ from\ this\ deque.
numComments=10
